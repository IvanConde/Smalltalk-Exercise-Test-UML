Object subclass: #AlgoFix	instanceVariableNames: 'pintores'	classVariableNames: ''	package: 'TP1'!!AlgoFix methodsFor: 'initialization' stamp: 'SilverWerewolf 5/22/2020 19:36'!initialize	pintores := OrderedCollection new.	! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 17:09'!manoDeObra: unValor masMateriales: otroValor	^unValor + otroValor. ! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 20:05'!registrarPintorDeRodillo: nombre conValorHora: unValor	| pintor rodillo |	rodillo := Rodillo new.	pintor := Pintor conNombre: nombre conValorHora: unValor yHerramienta: rodillo.	pintores add: pintor.! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 19:22'!presupuestoMasBaratoParaPintarMetrosCuadrados: unaCantidad conPintura: unaPintura	| presupuestos |	presupuestos := pintores collect: [:pintor | pintor generarPresupuestoConPintura: unaPintura yMetrosCuadrados: unaCantidad].	(presupuestos size < 1) ifTrue: [ PresupuestoSinPintoresError signal ].	^presupuestos detectMin: [:presupuesto | presupuesto valor].! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/23/2020 16:09'!crearPintura: unaMarca conPrecioPorLitro: unValor manosPincel: cantPincel manosRodillo: cantRodillo	| pintura |	pintura := Pintura unaMarca: unaMarca precioLitro: unValor cantManosPincel: cantPincel cantManosRodillo: cantRodillo.	^pintura.! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 20:05'!registrarPintorDePincel: nombre conValorHora: unValor	| pintor pincel |	pincel := Pincel new.	pintor := Pintor conNombre: nombre conValorHora: unValor yHerramienta: pincel.	pintores add: pintor.! !Error subclass: #CantidadDeManosMenorAUnoEnHerramientaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Descuento	instanceVariableNames: 'condicion'	classVariableNames: ''	package: 'TP1'!!Descuento methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 17:14'!initialize	condicion := DescuentoNoAplicado new.! !!Descuento methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 17:13'!aplicar	(condicion estaAplicado) ifTrue: [^1].	condicion := DescuentoAplicado new.	^0.5.! !Object subclass: #DescuentoAplicado	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!DescuentoAplicado methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 17:12'!estaAplicado	^true.! !Object subclass: #DescuentoNoAplicado	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!DescuentoNoAplicado methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 17:12'!estaAplicado	^false.! !Object subclass: #Herramienta	instanceVariableNames: 'cantManos litrosPorM2 horasPorM2'	classVariableNames: ''	package: 'TP1'!!Herramienta methodsFor: 'abstract' stamp: 'SilverWerewolf 5/23/2020 18:30'!metrosCuadradosTotales: metrosCuadrados! !!Herramienta methodsFor: 'abstract' stamp: 'SilverWerewolf 5/23/2020 18:29'!cargarDatos: unaPintura! !!Herramienta methodsFor: 'as yet unclassified' stamp: 'EnriqueAlvaro 5/23/2020 18:37'!litrosTotales: metrosCuadrados	^litrosPorM2 * metrosCuadrados.! !!Herramienta methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 19:53'!horasDeTrabajo: metrosCuadrados	^horasPorM2 * metrosCuadrados.! !Error subclass: #MetrosCuadradosEsMenorAUnoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Herramienta subclass: #Pincel	instanceVariableNames: 'descuento'	classVariableNames: ''	package: 'TP1'!!Pincel methodsFor: 'initialization' stamp: 'SilverWerewolf 5/24/2020 17:18'!initialize	horasPorM2 := 2.	litrosPorM2 := 4.	descuento := Descuento new.! !!Pincel methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 19:54'!metrosCuadradosTotales: metrosCuadrados	| multiplicador |	(metrosCuadrados < 1) ifTrue: [ MetrosCuadradosEsMenorAUnoError signal ].	multiplicador := 1.	(metrosCuadrados > 40) ifTrue: [multiplicador := descuento aplicar].	^cantManos * metrosCuadrados * multiplicador.	"x compareTo: 25    lesser: [ do something ]    equals: [ do something else ]    greater: [ do something entirely different ]"! !!Pincel methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 19:45'!cargarDatos: unaPintura	cantManos := unaPintura getManosPincel.	(cantManos < 1) ifTrue: [ CantidadDeManosMenorAUnoEnHerramientaError signal ].! !Object subclass: #Pintor	instanceVariableNames: 'herramienta precioPorHora nombre'	classVariableNames: ''	package: 'TP1'!!Pintor methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/22/2020 19:11'!getNombre	^nombre.! !!Pintor methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 23:21'!generarPresupuestoConPintura: unaPintura yMetrosCuadrados: unaCantidad	| presupuesto |	(unaPintura) ifNil: [ PintorSinPinturaError signal ].	presupuesto := Presupuesto conMetrosCuadrados: unaCantidad yPintura: unaPintura.	herramienta cargarDatos: unaPintura.	presupuesto generarPresupuestoDe: self conHerramienta: herramienta.	^presupuesto.! !!Pintor methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 20:06'!precioPorHoras: horas	(precioPorHora < 1) ifTrue: [ PintorRecibeValorPorHoraInvalidoError signal ].	^precioPorHora * horas.! !!Pintor methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 15:38'!setNombre: unNombre	nombre := unNombre.	"SET para constructor"! !!Pintor methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 16:06'!setHerramienta: unaHerramienta	herramienta := unaHerramienta.	"SET para constructor"! !!Pintor methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 15:38'!setPrecioPorHora: unValor	precioPorHora := unValor.	"SET para constructor"! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintor class	instanceVariableNames: ''!!Pintor class methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 16:05'!conNombre: unNombre conValorHora: unValor yHerramienta: unaHerramienta	| pintor |	pintor := self new.	pintor setNombre: unNombre.	pintor setPrecioPorHora: unValor.	pintor setHerramienta: unaHerramienta.	^pintor.! !Error subclass: #PintorRecibeValorPorHoraInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #PintorSinPinturaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Pintura	instanceVariableNames: 'marca precioLitro manosPincel manosRodillo'	classVariableNames: ''	package: 'TP1'!!Pintura methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/23/2020 17:28'!getManosRodillo	^manosRodillo.! !!Pintura methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 20:09'!precioPorLitros: litros	(precioLitro < 1) ifTrue: [ PinturaRecibeValorPorLitroInvalidoError signal ].	^precioLitro * litros.! !!Pintura methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/23/2020 17:28'!getManosPincel	^manosPincel.! !!Pintura methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 15:37'!setMarca: unaMarca	marca := unaMarca.	"SET para constructor"! !!Pintura methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 15:37'!setManosRodillo: cantManos	manosRodillo := cantManos.	"SET para constructor"! !!Pintura methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 17:48'!setManosPincel: cantManos	manosPincel := cantManos.	"SET para constructor"! !!Pintura methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 15:37'!setPrecioLitro: unValor	precioLitro := unValor.	"SET para constructor"! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintura class	instanceVariableNames: ''!!Pintura class methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 17:50'!unaMarca: unaMarca precioLitro: unValor cantManosPincel: unaCant cantManosRodillo: otraCant	| pintura |	pintura := self new.	pintura setMarca: unaMarca.	pintura setPrecioLitro: unValor.	pintura setManosPincel: unaCant.	pintura setManosRodillo: otraCant.	^pintura.! !Error subclass: #PinturaRecibeValorPorLitroInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Presupuesto	instanceVariableNames: 'responsable valor pintura metrosCuadrados'	classVariableNames: ''	package: 'TP1'!!Presupuesto methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/23/2020 19:07'!calcularMaterialesConPintor: unPintor yHerramienta: unaHerramienta	^pintura precioPorLitros: (unaHerramienta litrosTotales: (unaHerramienta metrosCuadradosTotales: metrosCuadrados)).! !!Presupuesto methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/23/2020 15:35'!responsable	^responsable.! !!Presupuesto methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/23/2020 15:35'!valor	^valor.! !!Presupuesto methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 23:21'!generarPresupuestoDe: unPintor conHerramienta: unaHerramienta	| manoDeObra materiales |	manoDeObra := self calcularManoDeObraConPintor: unPintor yHerramienta: unaHerramienta.	materiales := self calcularMaterialesConPintor: unPintor yHerramienta: unaHerramienta.	responsable := unPintor getNombre.	valor := manoDeObra + materiales.! !!Presupuesto methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/23/2020 19:06'!calcularManoDeObraConPintor: unPintor yHerramienta: unaHerramienta	^unPintor precioPorHoras: (unaHerramienta horasDeTrabajo: (unaHerramienta metrosCuadradosTotales: metrosCuadrados)).! !!Presupuesto methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 15:37'!setPintura: unaPintura	pintura := unaPintura.	"SET para constructor"! !!Presupuesto methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 15:37'!setMetrosCuadrados: unaCantidad	metrosCuadrados := unaCantidad.	"SET para constructor"	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Presupuesto class	instanceVariableNames: ''!!Presupuesto class methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 15:36'!conMetrosCuadrados: unaCantidad yPintura: unaPintura	| presupuesto |	presupuesto := self new.	presupuesto setMetrosCuadrados: unaCantidad.	presupuesto setPintura: unaPintura.	^presupuesto.! !Error subclass: #PresupuestoSinPintoresError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Herramienta subclass: #Rodillo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Rodillo methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 19:54'!metrosCuadradosTotales: metrosCuadrados	(metrosCuadrados < 1) ifTrue: [ MetrosCuadradosEsMenorAUnoError signal ].	^cantManos * metrosCuadrados.! !!Rodillo methodsFor: 'as yet unclassified' stamp: 'SilverWerewolf 5/24/2020 19:45'!cargarDatos: unaPintura	cantManos := unaPintura getManosRodillo.	(cantManos < 1) ifTrue: [ CantidadDeManosMenorAUnoEnHerramientaError signal ].! !!Rodillo methodsFor: 'initialization' stamp: 'SilverWerewolf 5/23/2020 15:43'!initialize	horasPorM2 := 1.	litrosPorM2 := 5.! !